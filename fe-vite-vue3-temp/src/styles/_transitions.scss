@charset "utf-8";
/*!
  Name: transitions
  Author: william
  Author URI: 
  Description: elements transitions.
  Version: 1.0.1
	Tags: transitions, transition-property, transition-duration, transition-timing-function, transition-delay
  Update: December 26th,2022
*/

/*
* 1. transition property
*/
@mixin transitionProperty ($type: none, $transitionTimingFunction: cubic-bezier(0.4, 0, 0.2, 1), $transitionDuration: 150ms, $transitionProperty...){
  @if($type == none){
    transition-property: none;
  } @else {
    transition-property: $transitionProperty;
    transition-timing-function: $transitionTimingFunction;
    transition-duration: $transitionDuration;
  }
}

.transition-none{
  @include transitionProperty(none);
}

.transition-all{
  @include transitionProperty(1, cubic-bezier(0.4, 0, 0.2, 1), 150ms, all);
}

.transition{
  @include transitionProperty(1, cubic-bezier(0.4, 0, 0.2, 1), 150ms, color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter);
}

.transition-colors{
  @include transitionProperty(1, cubic-bezier(0.4, 0, 0.2, 1), 150ms, color, background-color, border-color, text-decoration-color, fill, stroke);
}

.transition-opacity{
  @include transitionProperty(1, cubic-bezier(0.4, 0, 0.2, 1), 150ms, opacity);
}

.transition-shadow{
  @include transitionProperty(1, cubic-bezier(0.4, 0, 0.2, 1), 150ms, box-shadow);
}

.transition-transform{
  @include transitionProperty(1, cubic-bezier(0.4, 0, 0.2, 1), 150ms, transform);
}


/*
* 2. transition-duration and transition-delay
*/
$transitionDuration: (75: 75ms, 100: 100ms, 150: 150ms, 200: 200ms, 300: 300ms, 500: 500ms, 700: 700ms, 1000: 1000ms);
@for $i from 1 through length(map-keys($transitionDuration)) {
  $name: nth(map-keys($transitionDuration), $i);
  $values: nth(map-values($transitionDuration), $i);
  .duration-#{$name}{
    transition-duration: $values;
  }

  .delay-#{$name}{
    transition-delay: $values;
  }
}


/*
* 3. transition-timing-function
*/
$transitionTimingFunction: (linear: linear, in: cubic-bezier(0.4, 0, 1, 1), out: cubic-bezier(0, 0, 0.2, 1), in-out: cubic-bezier(0.4, 0, 0.2, 1));
@for $i from 1 through length(map-keys($transitionTimingFunction)) {
  $name: nth(map-keys($transitionTimingFunction), $i);
  $values: nth(map-values($transitionTimingFunction), $i);
  .ease-#{$name}{
    transition-timing-function: $values;
  }
}
